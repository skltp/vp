apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  name: {{ .Values.deployment.name }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.deployment.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.deployment.name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: {{ .Values.deployment.name }}
    spec:
      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      imagePullSecrets:
        - name: regcred

      volumes: 
        - name: pemCertsVolume
          secret:
            secretName: {{ .Values.initContainer.certGen.pemCertSecret | default tjp-function-cert }}
            items:
              - key: {{ .Values.initContainer.certGen.pemCertSecretKeyItem | default tls.key }}
                path: key.pem
              - key: {{ .Values.initContainer.certGen.pemCertSecretCertChainItem | default tls.crt }}
                path: cert.pem
            optional: true
        - name: pkcs12Volume




      initContainers:
        - name: {{ .Values.initContainer.certGen.image.name }}
          image: "{{ .Values.repository }}{{ .Values.initContainer.certGen.image.name }}:{{ .Values.initContainer.certGen.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.initContainer.certGen.image.pullPolicy | default Always }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}          
          volumeMounts:
            - name: pemCertsVolume
              mountPath: /opt/certs/pem
              readonly: true
            - name: pkcs12Volume
              mountPath: /opt/certs/pkcs12
              readonly: false
          command: 
            - "/bin/sh"
            - "-c"
            - "--"
          args: 
            - "openssl"
            - "pkcs12"
            - "export"
            - "-in"
            - "/opt/certs/opt/certs/pem/cert.pem"
            - "-inkey"
            - "/opt/certs/opt/certs/pem/cert.key"
            - "-out"
            - "/opt/certs/opt/certs/pkcs12/function_cert.pfx"
            - "-passout"
            - "pass:password"

      containers:
        - name: {{ .Values.container.image.name }}
          image: "{{ .Values.repository }}{{ .Values.container.image.name }}:{{ .Values.container.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.container.image.pullPolicy }}
          ports:
            - name: {{ .Values.deployment.name }}
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          envFrom:
            {{- range $.Values.environment.variables._default_config_maps }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- range $.Values.environment.variables.config_maps }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- range $.Values.environment.variables.secrets }}
            - secretRef:
                name: {{ . }}
            {{- end }}
          env:
            - name: TP_TLS_STORE_PRODUCER_FILE
              value: "function_cert.pfx"
            - name: TP_TLS_STORE_PRODUCER_TYPE
              value: PKCS12
            - name: TP_TLS_STORE_PRODUCER_PASSWORD
              value: password
            - name: TP_TLS_STORE_CONSUMER_FILE
              value: "function_cert.pfx"
            - name: TP_TLS_STORE_CONSUMER_TYPE
              value: PKCS12
            - name: TP_TLS_STORE_CONSUMER_PASSWORD
              value: password
            - name: TP_TLS_STORE_LOCATION
              value: "file://opt/certs/opt/certs/pkcs12/"
            - name: TP_TLS_STORE_TRUSTSTORE_FILE
              value: truststore.pfx
            - name: TP_TLS_STORE_TRUSTSTORE_TYPE
              value: PKCS12
            - name: TP_TLS_STORE_TRUSTSTORE_PASSWORD
              value: PKCS12

